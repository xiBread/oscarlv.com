---
import type { GetStaticPaths } from "astro";
import { getCollection, type CollectionEntry } from "astro:content";
import type { FileObject } from "imagekit/dist/libs/interfaces";
import Image from "../../components/Image.astro";
import Lightbox from "../../components/Lightbox.vue";
import Container from "../../components/container/Container.astro";
import Layout from "../../layouts/Layout.astro";
import { getFolder } from "../../lib/imagekit";

export const getStaticPaths: GetStaticPaths = async () => {
	const entries = await getCollection("art");

	return entries.map((entry) => {
		return {
			params: { slug: entry.slug },
			props: { entry },
		};
	});
};

export interface Props {
	entry: CollectionEntry<"art">;
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const images = await getFolder(entry.slug);

const columns: FileObject[][] = Array.from({ length: 3 }, () => []);

for (let i = 0; i < images.length; i++) {
	columns[i % 3].push(images[i]);
}

if (images.length > 3) {
	const outlier = columns.reduce((i, col) => i ^ col.length, 0);
	const index = columns.findIndex((col) => col.length === outlier);

	[columns[1], columns[index]] = [columns[index], columns[1]];
}
---

<Layout title={entry.data.title}>
	<Container class="mt-20 sm:mt-28">
		<article class="prose prose-zinc dark:prose-invert">
			<h1 class="sm:text-5xl">{entry.data.title}</h1>
			<Content />
		</article>

		<div class="mt-16 grid grid-cols-2 gap-6 md:grid-cols-3">
			{
				columns.map((column) => (
					<div class="flex flex-col gap-6">
						{column.map((image) => (
							<div
								class="xyz-in overflow-hidden rounded-lg"
								xyz="fade stagger duration-10"
							>
								<Lightbox client:only="vue">
									<Image
										src={image.filePath}
										width={image.width}
										height={image.height}
										class="h-full max-h-[90vh] w-full max-w-[90vw] object-cover"
									/>
								</Lightbox>
							</div>
						))}
					</div>
				))
			}
		</div>
	</Container>
</Layout>
